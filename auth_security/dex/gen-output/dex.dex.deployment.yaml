apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/name: dex
    app.kubernetes.io/part-of: dex
  name: dex
  namespace: dex
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: identity-provider
      app.kubernetes.io/name: dex
      app.kubernetes.io/part-of: dex
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: identity-provider
        app.kubernetes.io/name: dex
        app.kubernetes.io/part-of: dex
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        image: ghcr.io/dexidp/dex:v2.35.3
        imagePullPolicy: IfNotPresent
        name: dex
        ports:
        - containerPort: 5556
          name: http
          protocol: TCP
        - containerPort: 5566
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
        - mountPath: /etc/dex/sa
          name: google-sa
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: dex
      serviceAccountName: dex
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        secret:
          defaultMode: 420
          secretName: config-mb4t842792
      - name: google-sa
        secret:
          defaultMode: 420
          secretName: google-sa-7dmbdbd24h
