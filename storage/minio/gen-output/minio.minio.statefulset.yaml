apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: minio
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: 2024.9.22
    helm.sh/chart: minio-14.7.13
  name: minio
  namespace: minio
spec:
  podManagementPolicy: Parallel
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/instance: minio
      app.kubernetes.io/name: minio
  serviceName: minio-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: minio
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: minio
        app.kubernetes.io/version: 2024.9.22
        helm.sh/chart: minio-14.7.13
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: minio
                  app.kubernetes.io/name: minio
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: true
      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MINIO_DISTRIBUTED_MODE_ENABLED
          value: "yes"
        - name: MINIO_DISTRIBUTED_NODES
          value: minio-{0...3}.minio-headless.minio.svc.cluster.local:9000/bitnami/minio/data
        - name: MINIO_SCHEME
          value: http
        - name: MINIO_FORCE_NEW_KEYS
          value: "no"
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: root-user
              name: minio-root-creds
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: root-password
              name: minio-root-creds
        - name: MINIO_SKIP_CLIENT
          value: "yes"
        - name: MINIO_BROWSER
          value: "on"
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: public
        - name: MINIO_CONSOLE_PORT_NUMBER
          value: "9001"
        - name: MINIO_API_PORT_NUMBER
          value: "9000"
        - name: MINIO_DATA_DIR
          value: /bitnami/minio/data
        - name: MINIO_UPDATE
          value: "off"
        envFrom: null
        image: docker.io/bitnami/minio:2024.9.22-debian-12-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /minio/health/live
            port: minio-api
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        name: minio
        ports:
        - containerPort: 9000
          name: minio-api
          protocol: TCP
        - containerPort: 9001
          name: minio-console
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: minio-api
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 375m
            ephemeral-storage: 2Gi
            memory: 384Mi
          requests:
            cpu: 250m
            ephemeral-storage: 50Mi
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/minio/tmp
          name: empty-dir
          subPath: app-tmp-dir
        - mountPath: /.mc
          name: empty-dir
          subPath: app-mc-dir
        - mountPath: /bitnami/minio/data
          name: data
        - mountPath: /certs/CAs/
          name: kube-root-ca
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: []
        sysctls: []
      serviceAccountName: minio
      volumes:
      - emptyDir: {}
        name: empty-dir
      - configMap:
          name: kube-root-ca.crt
        name: kube-root-ca
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/instance: minio
        app.kubernetes.io/name: minio
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 400Gi
      storageClassName: local
