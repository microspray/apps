apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pgadmin
  name: pgadmin
  namespace: pgadmin
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      containers:
      - env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: pg-prod@micros.legal
        - name: PGADMIN_DEFAULT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: pgadmin-password
              name: pgadmin-password-579km7cbh9
        - name: PGADMIN_PORT
          value: "80"
        - name: PGADMIN_CONFIG_WTF_CSRF_CHECK_DEFAULT
          value: "False"
        - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
          value: "False"
        - name: PGADMIN_CONFIG_WTF_CSRF_ENABLED
          value: "False"
        image: dpage/pgadmin4:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        name: pgadmin
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1280Mi
        volumeMounts:
        - mountPath: /var/lib/pgadmin
          name: pgadmin-data
      initContainers:
      - command:
        - /bin/chown
        - -R
        - 5050:5050
        - /var/lib/pgadmin
        image: busybox
        name: pgadmin-data-permission-fix
        volumeMounts:
        - mountPath: /var/lib/pgadmin
          name: pgadmin-data
      volumes:
      - name: pgadmin-data
        persistentVolumeClaim:
          claimName: pgadmin
