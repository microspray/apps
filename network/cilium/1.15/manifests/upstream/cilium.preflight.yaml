---
# Source: cilium/templates/cilium-preflight/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-pre-flight"
  namespace: kube-network
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-network
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-network
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-network
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWm5zMFh5WXR3b29MRVArRnBEbnlmVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXhORFF6V2hjTk1qWXdOVEF4TVRJeApORFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dyMlpLeW5ZeHBMalJ0YjNuNkZScElPcHpRbGxqeStQMy9MaGxlTlYzWWF5NDViai8KY3hqbnUzOHp0d0ZQNi9DUHhvTnVNY1BUMEFGQkxmUlE5ZjRkQ2VDVlNvZGFlRXp5VUNWdVlZanplY2trcm5yYQo1NElXWkNvb3Z5czNKd2dlc1JLWFlWUXp3SXVtc2R5NEdqTU9XK1g4em1ZM0t2L2Q3QkRnTWxLTmxuck0yT2d2CkhPZ3NYNTA0UzJOL2l0cEdWemFkR29YUDR5OEZTZ1BSbkdaUTQvM3ZuYnBKZ0dxUURCQ2VWeHV1YnhPZDZTRGMKVkdqc1U5am05S05ZY3cvWWx1aGEvajByTGd6Q0pvYkpDbEJvem5pajRFQ3FxVVlNNlI0NERPRDA4NHNPQXJhagprNmRlZFhZTkZ4K1YyZWVYektub250VnBQdmxobnNDdDA3NXZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxTW9DdEU0MkZmZXpoazBDa2VjaXE1NkhNaFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGVmE2UkZzUU1jMjZmdFArd2JlaG1QUmozL0VPTUd5alk1U0cydmVRQzdNbVF5RmRhVHZRcW5BCnFicWJNK056RnphMjZ2d2FtVUFJUTNBWEtwWm5nc0NpaEpwN2d4NVp0MHpsK2Y3RHQzNVUyUE5XUFNJKzJXZHEKa2ZBdElMaFlXSXRWMm05dDZTUXM5M2JKUTh1OTEwYTBMQTBzdkNNTHdIWExQdXlnbXdFeFkyNm5HNmRsTTRuegpnbjQyY1pTMjhsVHJTT1Y3MldrdTFUczI5NWhoaFVjVmdMYXgxWUQrM2RWMVhNTjBxWUNPNjR6MXJGV3k5aTl4ClRnWTNONld4UE53TUlIeEhqN0habUdnT29TL0o1WVF3Z3lhVHgyTG9YSTYzTFA4WkN5bjR4cjkwdmZQRWZERGUKaDFGV1VDZXNqMDQ1RmhQeC9JRjZ3RE1lTmtUc1dvUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc0s5bVNzcDJNYVM0MGJXOTUraFVhU0RxYzBKWlk4dmo5L3k0WlhqVmQyR3N1T1c0Ci8zTVk1N3QvTTdjQlQrdndqOGFEYmpIRDA5QUJRUzMwVVBYK0hRbmdsVXFIV25oTThsQWxibUdJODNuSkpLNTYKMnVlQ0ZtUXFLTDhyTnljSUhyRVNsMkZVTThDTHBySGN1Qm96RGx2bC9NNW1OeXIvM2V3UTRESlNqWlo2ek5qbwpMeHpvTEYrZE9FdGpmNHJhUmxjMm5ScUZ6K012QlVvRDBaeG1VT1A5NzUyNlNZQnFrQXdRbmxjYnJtOFRuZWtnCjNGUm83RlBZNXZTaldITVAySmJvV3Y0OUt5NE13aWFHeVFwUWFNNTRvK0JBcXFsR0RPa2VPQXpnOVBPTERnSzIKbzVPblhuVjJEUmNmbGRubmw4eXA2SjdWYVQ3NVlaN0FyZE8rYndJREFRQUJBb0lCQUg5SmZabzREYnBwL3pRbAppSERBTWIrakZRU0FNa0h4SzRVR3JobDhXZDB0b3U5NW9ETjRTZUw0Y3dWZ3ZETkZ1UUw3Y3NnNlZlZ01uRHJHCnpwSmRCZnNKbUtBMUZ4b1lQT2I4MGxxWkxiNnFhRHhpN3VNeGtjaHIxT3VSL2FJNEhtTnVFZ1M0KzU1bEFyYk8Kd0VKcHJZcVVyalhZeEU3T1RaTWxkR3J3RmdVbHhpUy85NndiampGSzNpbzY5WHVrSUJ6Tlp0N294RmNRdjVxRQphZEtxU2dGQkk2OStxNjAxTkdCaytYb2tEYXdRNzV2WTJ3anBlUWdPVkE1ank3SjVkOWgyK2ltajF0YnU1eGpCCk43RjZaZEVFZENzOHNva1BDT2cxZVdzdHhoSmJsanI5Q1UvQTFraUZKR0lETXJxUlJqVFBaVW9yQ29UZEoycUQKbGRCS21wRUNnWUVBd3JaMkdiWUlXQjdZQ3AydmZaRGFVdDZFMG9Ta3gwQThvdS90U3NiUFA3d29ydlhYaXorOQpUM3RNSjRyeXg5bjRMM1hOQXNVcnV2anFaWEJMY2xrU0FtOS9ySEV0T3Arb2lxTWVVeGVtU2xLdVpFdDBwL2doCnJxeWJVOWFlcmxZVG9zZ3YwUkl3MzFFSGZmSmFhdjJjRmpxNDdlVEViV0NPeUVWNUViZWdHV3NDZ1lFQTZFeFEKVTE1bGx0ajd4WXRTeHVvakdZUU5VZ1E1L3laODhlL0JHR1BIRzFsTWpSbFJjR3N4WDAzcHhSbHZSL24rTitGOQpWNXdOWlV3R0VCMlRoaTE0dnMwTWF6Ni9uNy94cUdHdDFaMkl6NjhkU1R3RHVJRStzazU1VDMxM21vL2JjbmY0CnVFY3dVckJRTE5WdkVVZ2RCVWtNeUdFOThTTmdzUEdVQUFpd1hBMENnWUVBa0J0cW5PelVrQ09EMFplUzRtUHEKc1pwdXd6L1lsSDgrWVhraExrNmw1STNscmxmVkJ3Sk5vaDJtNXowM0lpSjRST2Z5cXpJeWcxYm1ZOTBRZWJqaQpVMXNpS3dZNGEwTHZBbXhuYlNmN3N0WXVxNXdNNHFRS2liVEY0TzdlMGpoeW4rOTVORXM2VUkwdjlrOEFERjlXCnZqMEgwVW1XOXp5WGNERzZ3Um9lSzdFQ2dZRUF5V2RvK1c5Tm15VVQzV2wzWW5rYjU0S0RYZ25HRXY5V3N4alIKRFFsdFZydnMwQ1VVWStpOFRNb3JsYlVBczZIL0ZJb1BkNGNZWWl3dzBZWWpJdUdIMzcyK043bVd3TFhWbXN6ZAp2K2l1OW9uNFZVZVFYa2JJaWlYWnJkNjFkUyttN3k4dldPNTM2aWx0eWdGZkk5ZW5PYTdsUTFKME52OGFWUytPCnh4ekJjMzBDZ1lFQWpmMkIwVHpWN0NyalQ3U2drNEwybGRqa2puemJqcDNpQUdPeCt5cUtINng2V0tlNU5PcnkKc2dEK2RkQVdIMXpsRm55NmtkWjdaSm5xVU5Yem5SZ3NsSmF2ZVdlZEYzUThiWHhmMXpQNG93RlVwTGsrdjVmeApqQi9oa0pkRzAxRzVFVEtuUHNLNGZkbFZNeGh0bmQ4NE1qUnZHb3VMTnZISFRsQUVQckhsNmFvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-network
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWm5zMFh5WXR3b29MRVArRnBEbnlmVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXhORFF6V2hjTk1qWXdOVEF4TVRJeApORFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dyMlpLeW5ZeHBMalJ0YjNuNkZScElPcHpRbGxqeStQMy9MaGxlTlYzWWF5NDViai8KY3hqbnUzOHp0d0ZQNi9DUHhvTnVNY1BUMEFGQkxmUlE5ZjRkQ2VDVlNvZGFlRXp5VUNWdVlZanplY2trcm5yYQo1NElXWkNvb3Z5czNKd2dlc1JLWFlWUXp3SXVtc2R5NEdqTU9XK1g4em1ZM0t2L2Q3QkRnTWxLTmxuck0yT2d2CkhPZ3NYNTA0UzJOL2l0cEdWemFkR29YUDR5OEZTZ1BSbkdaUTQvM3ZuYnBKZ0dxUURCQ2VWeHV1YnhPZDZTRGMKVkdqc1U5am05S05ZY3cvWWx1aGEvajByTGd6Q0pvYkpDbEJvem5pajRFQ3FxVVlNNlI0NERPRDA4NHNPQXJhagprNmRlZFhZTkZ4K1YyZWVYektub250VnBQdmxobnNDdDA3NXZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxTW9DdEU0MkZmZXpoazBDa2VjaXE1NkhNaFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGVmE2UkZzUU1jMjZmdFArd2JlaG1QUmozL0VPTUd5alk1U0cydmVRQzdNbVF5RmRhVHZRcW5BCnFicWJNK056RnphMjZ2d2FtVUFJUTNBWEtwWm5nc0NpaEpwN2d4NVp0MHpsK2Y3RHQzNVUyUE5XUFNJKzJXZHEKa2ZBdElMaFlXSXRWMm05dDZTUXM5M2JKUTh1OTEwYTBMQTBzdkNNTHdIWExQdXlnbXdFeFkyNm5HNmRsTTRuegpnbjQyY1pTMjhsVHJTT1Y3MldrdTFUczI5NWhoaFVjVmdMYXgxWUQrM2RWMVhNTjBxWUNPNjR6MXJGV3k5aTl4ClRnWTNONld4UE53TUlIeEhqN0habUdnT29TL0o1WVF3Z3lhVHgyTG9YSTYzTFA4WkN5bjR4cjkwdmZQRWZERGUKaDFGV1VDZXNqMDQ1RmhQeC9JRjZ3RE1lTmtUc1dvUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc0s5bVNzcDJNYVM0MGJXOTUraFVhU0RxYzBKWlk4dmo5L3k0WlhqVmQyR3N1T1c0Ci8zTVk1N3QvTTdjQlQrdndqOGFEYmpIRDA5QUJRUzMwVVBYK0hRbmdsVXFIV25oTThsQWxibUdJODNuSkpLNTYKMnVlQ0ZtUXFLTDhyTnljSUhyRVNsMkZVTThDTHBySGN1Qm96RGx2bC9NNW1OeXIvM2V3UTRESlNqWlo2ek5qbwpMeHpvTEYrZE9FdGpmNHJhUmxjMm5ScUZ6K012QlVvRDBaeG1VT1A5NzUyNlNZQnFrQXdRbmxjYnJtOFRuZWtnCjNGUm83RlBZNXZTaldITVAySmJvV3Y0OUt5NE13aWFHeVFwUWFNNTRvK0JBcXFsR0RPa2VPQXpnOVBPTERnSzIKbzVPblhuVjJEUmNmbGRubmw4eXA2SjdWYVQ3NVlaN0FyZE8rYndJREFRQUJBb0lCQUg5SmZabzREYnBwL3pRbAppSERBTWIrakZRU0FNa0h4SzRVR3JobDhXZDB0b3U5NW9ETjRTZUw0Y3dWZ3ZETkZ1UUw3Y3NnNlZlZ01uRHJHCnpwSmRCZnNKbUtBMUZ4b1lQT2I4MGxxWkxiNnFhRHhpN3VNeGtjaHIxT3VSL2FJNEhtTnVFZ1M0KzU1bEFyYk8Kd0VKcHJZcVVyalhZeEU3T1RaTWxkR3J3RmdVbHhpUy85NndiampGSzNpbzY5WHVrSUJ6Tlp0N294RmNRdjVxRQphZEtxU2dGQkk2OStxNjAxTkdCaytYb2tEYXdRNzV2WTJ3anBlUWdPVkE1ank3SjVkOWgyK2ltajF0YnU1eGpCCk43RjZaZEVFZENzOHNva1BDT2cxZVdzdHhoSmJsanI5Q1UvQTFraUZKR0lETXJxUlJqVFBaVW9yQ29UZEoycUQKbGRCS21wRUNnWUVBd3JaMkdiWUlXQjdZQ3AydmZaRGFVdDZFMG9Ta3gwQThvdS90U3NiUFA3d29ydlhYaXorOQpUM3RNSjRyeXg5bjRMM1hOQXNVcnV2anFaWEJMY2xrU0FtOS9ySEV0T3Arb2lxTWVVeGVtU2xLdVpFdDBwL2doCnJxeWJVOWFlcmxZVG9zZ3YwUkl3MzFFSGZmSmFhdjJjRmpxNDdlVEViV0NPeUVWNUViZWdHV3NDZ1lFQTZFeFEKVTE1bGx0ajd4WXRTeHVvakdZUU5VZ1E1L3laODhlL0JHR1BIRzFsTWpSbFJjR3N4WDAzcHhSbHZSL24rTitGOQpWNXdOWlV3R0VCMlRoaTE0dnMwTWF6Ni9uNy94cUdHdDFaMkl6NjhkU1R3RHVJRStzazU1VDMxM21vL2JjbmY0CnVFY3dVckJRTE5WdkVVZ2RCVWtNeUdFOThTTmdzUEdVQUFpd1hBMENnWUVBa0J0cW5PelVrQ09EMFplUzRtUHEKc1pwdXd6L1lsSDgrWVhraExrNmw1STNscmxmVkJ3Sk5vaDJtNXowM0lpSjRST2Z5cXpJeWcxYm1ZOTBRZWJqaQpVMXNpS3dZNGEwTHZBbXhuYlNmN3N0WXVxNXdNNHFRS2liVEY0TzdlMGpoeW4rOTVORXM2VUkwdjlrOEFERjlXCnZqMEgwVW1XOXp5WGNERzZ3Um9lSzdFQ2dZRUF5V2RvK1c5Tm15VVQzV2wzWW5rYjU0S0RYZ25HRXY5V3N4alIKRFFsdFZydnMwQ1VVWStpOFRNb3JsYlVBczZIL0ZJb1BkNGNZWWl3dzBZWWpJdUdIMzcyK043bVd3TFhWbXN6ZAp2K2l1OW9uNFZVZVFYa2JJaWlYWnJkNjFkUyttN3k4dldPNTM2aWx0eWdGZkk5ZW5PYTdsUTFKME52OGFWUytPCnh4ekJjMzBDZ1lFQWpmMkIwVHpWN0NyalQ3U2drNEwybGRqa2puemJqcDNpQUdPeCt5cUtINng2V0tlNU5PcnkKc2dEK2RkQVdIMXpsRm55NmtkWjdaSm5xVU5Yem5SZ3NsSmF2ZVdlZEYzUThiWHhmMXpQNG93RlVwTGsrdjVmeApqQi9oa0pkRzAxRzVFVEtuUHNLNGZkbFZNeGh0bmQ4NE1qUnZHb3VMTnZISFRsQUVQckhsNmFvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-network
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWm5zMFh5WXR3b29MRVArRnBEbnlmVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXhORFF6V2hjTk1qWXdOVEF4TVRJeApORFF6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3dyMlpLeW5ZeHBMalJ0YjNuNkZScElPcHpRbGxqeStQMy9MaGxlTlYzWWF5NDViai8KY3hqbnUzOHp0d0ZQNi9DUHhvTnVNY1BUMEFGQkxmUlE5ZjRkQ2VDVlNvZGFlRXp5VUNWdVlZanplY2trcm5yYQo1NElXWkNvb3Z5czNKd2dlc1JLWFlWUXp3SXVtc2R5NEdqTU9XK1g4em1ZM0t2L2Q3QkRnTWxLTmxuck0yT2d2CkhPZ3NYNTA0UzJOL2l0cEdWemFkR29YUDR5OEZTZ1BSbkdaUTQvM3ZuYnBKZ0dxUURCQ2VWeHV1YnhPZDZTRGMKVkdqc1U5am05S05ZY3cvWWx1aGEvajByTGd6Q0pvYkpDbEJvem5pajRFQ3FxVVlNNlI0NERPRDA4NHNPQXJhagprNmRlZFhZTkZ4K1YyZWVYektub250VnBQdmxobnNDdDA3NXZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxTW9DdEU0MkZmZXpoazBDa2VjaXE1NkhNaFl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGVmE2UkZzUU1jMjZmdFArd2JlaG1QUmozL0VPTUd5alk1U0cydmVRQzdNbVF5RmRhVHZRcW5BCnFicWJNK056RnphMjZ2d2FtVUFJUTNBWEtwWm5nc0NpaEpwN2d4NVp0MHpsK2Y3RHQzNVUyUE5XUFNJKzJXZHEKa2ZBdElMaFlXSXRWMm05dDZTUXM5M2JKUTh1OTEwYTBMQTBzdkNNTHdIWExQdXlnbXdFeFkyNm5HNmRsTTRuegpnbjQyY1pTMjhsVHJTT1Y3MldrdTFUczI5NWhoaFVjVmdMYXgxWUQrM2RWMVhNTjBxWUNPNjR6MXJGV3k5aTl4ClRnWTNONld4UE53TUlIeEhqN0habUdnT29TL0o1WVF3Z3lhVHgyTG9YSTYzTFA4WkN5bjR4cjkwdmZQRWZERGUKaDFGV1VDZXNqMDQ1RmhQeC9JRjZ3RE1lTmtUc1dvUT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU16T2l0STRzZ3VQSVRlTTJ0MVluQTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd01qRXlNVFEwTTFvWERUSTJNRFV3TVRFeQpNVFEwTTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZkdEhXMFNsNUV3UElKYUdEdlNiWnJkemdad24KY3NWckEwL3ZUMUx6Z0dHWTVPbGpzUm9henZQZEF2VDkxNmV5YVFOWVFpVTJaNk8rZzBSSnJ4ZUxGTks4MmpZOApxdUNIYU94dzRwUVV5a3A3NXhhTzB2aElQcXczOUlITDJWdWVjWlAzR1M2Q0VNSWsxSmJnRmFzMEdJUmJiNlExCmNhWjV1MU5WYk5DOC9hUTM0RFdBZHBTMlQ4RVpFekVvSkUrNVpoTGNPU2JmQzlGbFlJS3p5OUlld3kyVUlOVy8Kdjcwa3JKWkhMUUNJTlozcU5aOTZNUUJUdXYyak9RelhpU1JXM2Y2WWtsbitFTlBzdGQwWjI3V04rV1dwV21pagpUNlhpMjlobUt2Vjd6Y2hESE9KTWlEdHIyWC9LL0RsMlNTcEtFZ2hBeGFXUjRZSzZ3K2VLY3hnZWF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVFV5Z0swVGpZVjk3T0dUUUtSNXlLcgpub2N5RmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSHRKL0taQTlXUFlGc1MzSVlJcEVBRWJ0Z0tVRUVSM1A2Q0VxZUlodmxOZlJ5Q3AKK3pEVklsaEM0N2FEaXJqUGhPTlR5Q1pFUDQ3SGM1Ny9RYXZOcFkvak1YZW9xbmVPcUJXYm9OZ0NJQlAyOUVXTwpHZlYwRFd4QmRESmtBWlQrdmNOWE11Q2FQZXVCajVzYVdsdWR3UVlrZVhmZSttQzZ5MDBNNmdGZW5KVDFPRFJCCkY2OGhFMDJnelJ1YjVJM3RnQXcrOGlRVGxYUHhJRmk2OEgxdStBTWd5VXdjWEV3TEtaOGhFSHRpUm42WWNvR28KMlNKUEpoUXFlcUxvYThVcUMxVVpxZTlVYmdLTEM1dzVtSk1mOUlrRWRMRVd2ZjBQbWNPeU1vZmczcjZtekRPeApBMGJQTGZtcm9aSzl1azRsT01RbUxibllxNjVkeXlLdFhsQ0RkS009Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmR0SFcwU2w1RXdQSUphR0R2U2JacmR6Z1p3bmNzVnJBMC92VDFMemdHR1k1T2xqCnNSb2F6dlBkQXZUOTE2ZXlhUU5ZUWlVMlo2TytnMFJKcnhlTEZOSzgyalk4cXVDSGFPeHc0cFFVeWtwNzV4YU8KMHZoSVBxdzM5SUhMMlZ1ZWNaUDNHUzZDRU1JazFKYmdGYXMwR0lSYmI2UTFjYVo1dTFOVmJOQzgvYVEzNERXQQpkcFMyVDhFWkV6RW9KRSs1WmhMY09TYmZDOUZsWUlLenk5SWV3eTJVSU5XL3Y3MGtySlpITFFDSU5aM3FOWjk2Ck1RQlR1djJqT1F6WGlTUlczZjZZa2xuK0VOUHN0ZDBaMjdXTitXV3BXbWlqVDZYaTI5aG1LdlY3emNoREhPSk0KaUR0cjJYL0svRGwyU1NwS0VnaEF4YVdSNFlLNncrZUtjeGdlYXdJREFRQUJBb0lCQUdpTTZweXVEeFRMZGNFaQpZeXkxTXlhN2U1WXlZZDdvTEdna2lzcUtDYUgzSFBWaU9RMzhMQ3N2UzlRbkNlcktaSXREMWtTR3JaRWhNUGFrCmtsY2poZW12cTJRWFhnMVRtLzRCeHFCZm41dE9yVEN5MFhBSVhmQjFjbExwYjFLQkM1M01OOVRjTWEvODJiOWcKWG9KUVIxNEE5VUZqa2pMRjFGOStJcHJMMEdkMEpuelZxQm1idDF5NkhrdUFBeCs2TEtOdEFnMGJLMlVPK05ndgpnSUFHYlN6bmpSd3hIdkY4UC9rL1ErV0FObENOdDVMYzFxY2lUK2pHdGJ2UXgvN0s0S1AzdmdFQU5wUkhUYlEwClBsQ3hwOWNBQVFveHhSaXJYaDNNQzNySzRTeVM1MmcrWG5nM0ZLNE9lV1RMN0FUMUVrWnhkSE14LzEzVExZNnMKOHE3T01nRUNnWUVBNVBPVk1ESlVDcE83OTdUc1N2RlNJSjVyWnJydnI1bnNuejMxWENVY2l2dVNFSHhBb2VSdwpmM1lzd2lObjhNZndZWmJGUld0YTE4UklRNkNtQ0dUclpERlV3U0VzZ0Y3U0lKTWw3V2dFclk5OHFnRmlwc2p1CnVqSGJxczlMVHRuT01aTER5QWUyNlV3WUNZK2RjakZxRXc1Y09oRUFWemd2V0QrTG9DUFR2SUVDZ1lFQTFFbE8KcVlHckczQVUvNEhWUUo4dkRKcDR5Y280TkFhTjFwVlpVSStwMWhmbVBGczArcWV0OU1hRE1Ja2wvZ0htbnNwUgpVbExCVnZGWGJOUHM4ajRYeUlpbm5VeXNjNFViVld5Zy92MnI2RStqSzRKOFMzanYxRkREL1c4Y3U5L1JJQ3dRCkJ5RW9UY3hGMXNRc3lUbkc4ZUsvRmp4THh4Vk1HT09Jem9VQUZPc0NnWUFiTnREdTc2eUpyVkhVZWM3MGdZYlAKbGNVU2F2bitsMzlHMW1pSjBXZDVKYm9ROTVQL0tsWXM4SEVWaW52YVpRbXZyK28yL0RIS0greXZEVE52SC8vUwo0d0krQ3FGdGlOZlZRMmhvdGNxSWp0dTBvWUdHYmEvaXRmWjBjVHQwWGZOaWRSMk1jMDVNb056aWxnMlMrMGl1Cmh6QnpQbjRaMy9YUXVZenhOaEQvQVFLQmdDVUw2Z05nMHFpR0pkUDFKMjhRbUpoZGVNaldWbnFWempqdGRWbSsKeUlmSlFlKzBod2xiSzl0MHJUNVNJT1EwRnJnTlhLVytOV2xqMHJyMlBQcUZaWWNrZWdQVWRwL3VVYmZWcmo3eApyQWR0cG04WVpYS1NWMkE0L0FzRlVnRmpiTTV0Z2hxTWFja3g1ZG8yQUE3WjIyTXBDK25vZWR6elZZVmVaK2lLCmcxb2pBb0dCQU11NEIvbEhaeFFOU0tNb0I1eU54L2VOSTJ2anBXL0YwVDVJalNVVkE0SCtTK2k2S29vTnFodjgKT0NmVEdKeUxzWm9OSGh2dW9LcFhpZ0c5OVY2cC8vREVoNDNrcHc2RHZsVDVOZUkrUzBzWTByTUViRExsWXRGMAo0aS9NY1ZvZUZ1TGZqNzVuOURaUTV0cUQrS05wK0dxUkw5RnREUTJxQkhpV3pGV09BYU1pCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-network
data:
  config.yaml: |
    cluster-name: a
    peer-service: "hubble-peer.kube-network.svc.cluster.local:443"
    listen-address: :4245
    metrics-listen-address: ":9966"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-network
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/hubble/dashboards-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-l7-http-metrics-by-workload
  namespace: grafana
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    grafana_dashboard: "1"
data:
  hubble-l7-http-metrics-by-workload.json: "{\n  \"__inputs\": [],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\",\n      \"version\": \"9.0.5\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"stat\",\n      \"name\": \"Stat\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"grafana\",\n          \"uid\": \"-- Grafana --\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 1,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 14,\n      \"panels\": [],\n      \"title\": \"General\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"reqps\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 16,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"9.0.5\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"round(sum(rate(hubble_http_requests_total{reporter=~\\\"${reporter}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\"}[$__rate_interval])), 0.001)\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Volume\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 1\n      },\n      \"id\": 17,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"9.0.5\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", status!~\\\"5.*\\\"}[$__rate_interval]))\\n/\\nsum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval]))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ source_namespace }}/{{ source_workload }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Success Rate (non-5xx responses)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 1\n      },\n      \"id\": 18,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"pluginVersion\": \"9.0.5\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"histogram_quantile(0.50, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval])) by (le))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"P50\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"histogram_quantile(0.95, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval])) by (le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"P95\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"histogram_quantile(0.99, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval])) by (le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"P99\",\n          \"range\": true,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"Request Duration\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 6,\n      \"panels\": [],\n      \"title\": \"Requests by Source\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"reqps\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"id\": 3,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"max\",\n            \"mean\",\n            \"sum\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"round(sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, status), 0.001)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ source_namespace }}/{{ source_workload }}: {{ status }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Requests by Source and Response Code\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 7\n      },\n      \"id\": 7,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"min\",\n            \"max\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\",status!~\\\"5.*\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload)\\n/\\nsum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ source_namespace }}/{{ source_workload }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Success Rate (non-5xx responses) By Source\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 17\n      },\n      \"id\": 4,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"min\",\n            \"max\",\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.50, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, le))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ source_namespace }}/{{ source_workload }} P50\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.95, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ source_namespace }}/{{ source_workload }} P95\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.99, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ source_namespace }}/{{ source_workload }} P99\",\n          \"range\": true,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"HTTP Request Duration by Source\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 27\n      },\n      \"id\": 9,\n      \"panels\": [],\n      \"title\": \"Requests by Destination\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"reqps\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 28\n      },\n      \"id\": 10,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"max\",\n            \"mean\",\n            \"sum\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"round(sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, status), 0.001)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ destination_namespace }}/{{ destination_workload }}: {{ status }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Requests by Destination and Response Code\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 28\n      },\n      \"id\": 11,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"min\",\n            \"max\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\",status!~\\\"5.*\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload)\\n/\\nsum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ destination_namespace }}/{{ destination_workload }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Success Rate (non-5xx responses) By Destination\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\"\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 38\n      },\n      \"id\": 12,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"min\",\n            \"max\",\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.50, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, le))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ destination_namespace }}/{{ destination_workload }} P50\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.95, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ destination_namespace }}/{{ destination_workload }} P95\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.99, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ destination_namespace }}/{{ destination_workload }} P99\",\n          \"range\": true,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"HTTP Request Duration by Destination\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"30s\",\n  \"schemaVersion\": 36,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Prometheus\",\n        \"multi\": false,\n        \"name\": \"DS_PROMETHEUS\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"queryValue\": \"\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"type\": \"datasource\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total, cluster)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Cluster\",\n        \"multi\": false,\n        \"name\": \"cluster\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total, cluster)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 2,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\"}, destination_namespace)\",\n        \"description\": \"\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Destination Namespace\",\n        \"multi\": false,\n        \"name\": \"destination_namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\"}, destination_namespace)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 2,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\"}, destination_workload)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Destination Workload\",\n        \"multi\": false,\n        \"name\": \"destination_workload\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\"}, destination_workload)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 2,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total, reporter)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Reporter\",\n        \"multi\": false,\n        \"name\": \"reporter\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total, reporter)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\"}, source_namespace)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Source Namespace\",\n        \"multi\": true,\n        \"name\": \"source_namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\"}, source_namespace)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", source_namespace=~\\\"${source_namespace}\\\"}, source_workload)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Source Workload\",\n        \"multi\": true,\n        \"name\": \"source_workload\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", source_namespace=~\\\"${source_namespace}\\\"}, source_workload)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {},\n  \"timezone\": \"\",\n  \"title\": \"Hubble L7 HTTP Metrics by Workload\",\n  \"uid\": \"3g264CZVz\",\n  \"version\": 2,\n  \"weekStart\": \"\"\n}\n"
---
# Source: cilium/templates/cilium-preflight/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-pre-flight
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-preflight/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-pre-flight
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-pre-flight
subjects:
- kind: ServiceAccount
  name: "cilium-pre-flight" 
  namespace: kube-network
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-network
---
# Source: cilium/templates/hubble-relay/metrics-service.yaml
# We use a separate service from hubble-relay which can be exposed externally
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay-metrics
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-network
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-network
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/cilium-nodeinit/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  namespace: kube-network
  labels:
    app: cilium-node-init
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: cilium-node-init
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-node-init
    spec:
      containers:
        - name: node-init
          image: "quay.io/cilium/startup-script:d69851597ea019af980891a4628fb36b7880ec26"
          imagePullPolicy: IfNotPresent
          lifecycle:
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script. This script is invoked
          # using nsenter, so it runs in the host's network and mount namespace using
          # the host's userland tools!
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash
              
              set -o errexit
              set -o pipefail
              set -o nounset
              
              echo "Link information:"
              ip link
              
              echo "Routing table:"
              ip route
              
              echo "Addressing:"
              ip -4 a
              ip -6 a
              mkdir -p "/tmp/cilium-bootstrap.d"
              date > "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"
              echo "Node initialization complete"
              
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - SYS_MODULE
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            privileged: true
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      hostPID: true
      hostNetwork: true
      priorityClassName: system-node-critical
---
# Source: cilium/templates/cilium-preflight/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium-pre-flight-check
  namespace: kube-network
spec:
  selector:
    matchLabels:
      k8s-app: cilium-pre-flight-check
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-pre-flight-check
        app.kubernetes.io/name: cilium-pre-flight-check
        kubernetes.io/cluster-service: "true"
    spec:
      initContainers:
        - name: clean-cilium-state
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command: ["/bin/echo"]
          args:
          - "hello"
          terminationMessagePolicy: FallbackToLogsOnError
      containers:
        - name: cilium-pre-flight-check
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
          - -c
          - "touch /tmp/ready; sleep 1h"
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/ready
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/ready
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
          - name: cilium-run
            mountPath: /var/run/cilium
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      # This is here to seamlessly allow migrate-identity to work with
      # etcd-operator setups. The assumption is that other cases would also
      # work since the cluster DNS would forward the request on.
      # This differs from the cilium-agent daemonset, where this is only
      # enabled when etcd.managed=true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium-pre-flight"
      serviceAccountName: "cilium-pre-flight"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
---
# Source: cilium/templates/cilium-preflight/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-pre-flight-check
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-pre-flight-check
spec:
  selector:
    matchLabels:
      k8s-app: cilium-pre-flight-check-deployment
      kubernetes.io/cluster-service: "true"
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-pre-flight-check-deployment
        kubernetes.io/cluster-service: "true"
        app.kubernetes.io/name: cilium-pre-flight-check
    spec:
      containers:
        - name: cnp-validator
          image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
          - -ec
          - |
            cilium preflight validate-cnp;
            touch /tmp/ready-validate-cnp;
            sleep 1h;
          livenessProbe:
            exec:
              command:
              - cat
              - /tmp/ready-validate-cnp
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            exec:
              command:
              - cat
              - /tmp/ready-validate-cnp
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-pre-flight"
      serviceAccountName: "cilium-pre-flight"
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
        - key: CriticalAddonsOnly
          operator: Exists
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "1356fe4f89051bf8e0069538e7dfc3a5a3072d035b153e2c18e48b04505e5402"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-network
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "db58895f8bfc7a9858091698dbb61e43d5fd0160963d17c1eeedf3fd326a993d"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
---
# Source: cilium/templates/hubble-relay/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble-relay
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: "10s"
    path: /metrics
---
# Source: cilium/templates/hubble/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: hubble-metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
    relabelings:
    - replacement: ${1}
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
