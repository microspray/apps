---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-network
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-network
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-network
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-network
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-network
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSEcvMXVReTZRQ1hnV0NwejFDbWdiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXdNekl5V2hjTk1qWXdOVEF4TVRJdwpNekl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ21MbVdyckZZTFAyczQvVnhsR2NrY3RDKzZORDNTSlQzbkZyVEdnWktxQTFCVDBEd0kKMFJieDhRQXpFOHlmMldoNS9xamFVVldQUjR5NFgzT0d4WTdCd2tzdXJnSElISlRBSmc4MVR3ZFgyMUgyWmMvVQpwVnk3QkVnZkVKUDhySit3bDAxR2dUNXVTK0t4ZVpEOW1rd2I1V0hDUWlVdFRyVDBmY3N4K0RjQnIrRTVNQWJTCnNKU0hRZW9EZDlqbkVvcFlIblNwUENyZXFWS0NxY2NqdHFqS0N5SGhKQVMydjFJcjBJSGQ2ZFBvUlk2ZytYaHAKeWxhWm55enFSL0I2Z1JCcFpKeGt1NVBSV2dLZDNRWUhrc0ZuYWRNenJQSjArODZJVHI4WlZQT1BSQktlOEVBVwo5eERGbkVPNDJiYmhiTG4rRDUyaU5OSlV5TTdvb1Vxajk3cXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhT2lxdSthc0ppZEcxb0ZqWEJ6WTdTczJoMVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFa0FLZVFDMVZRQ0NrTENXaU5vWm93M3JQUkE1eXRnMDVDZGMwUnBhK1pTUHo1ZjRMWkJxUHFtCjhOWWN4NGQzaWx4Tk5qakdGdjdlT0J3YkdxMWtaeTNEcTJBWURtQmYvdWkyOWRNTUlzbHdxSUF3TFZYdEovcTYKdVY3RFlWT0JJa3dtWGxwT01VZ1VVaUN6YnptZEtkcnZEcEFwYkRjUGlvL2RiYXdMK0hRSmZRWDYrZ3RKNHc5bApDVWxJMlN2dkhzSEJkQS90NlVSaGFvbWtnOWtEV2F1TEd6UVlWMEdFM01kMmZZbi9BbUdlc25COTlLcVlKNk16CkZxOFNiMU1kUGtycHN6YlU0eHhSbXdiUncrWGs5RGVDM0VSdXpXTFpGWmRPaHBVMUZ5SjQ3MDk0TzZIQnZoSUUKYWFlZkFLSHNKZ3NXR2swYkEwSDNhV2NZbmROT2xEST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGk1bHE2eFdDejlyT1AxY1pSbkpITFF2dWpROTBpVTk1eGEweG9HU3FnTlFVOUE4CkNORVc4ZkVBTXhQTW45bG9lZjZvMmxGVmowZU11Rjl6aHNXT3djSkxMcTRCeUJ5VXdDWVBOVThIVjl0UjltWFAKMUtWY3V3UklIeENUL0t5ZnNKZE5Sb0UrYmt2aXNYbVEvWnBNRytWaHdrSWxMVTYwOUgzTE1mZzNBYS9oT1RBRwowckNVaDBIcUEzZlk1eEtLV0I1MHFUd3EzcWxTZ3FuSEk3YW95Z3NoNFNRRXRyOVNLOUNCM2VuVDZFV09vUGw0CmFjcFdtWjhzNmtmd2VvRVFhV1NjWkx1VDBWb0NuZDBHQjVMQloyblRNNnp5ZFB2T2lFNi9HVlR6ajBRU252QkEKRnZjUXhaeER1Tm0yNFd5NS9nK2RvalRTVk1qTzZLRktvL2U2c3dJREFRQUJBb0lCQUhrVmhXODQrdGpuTkxFcApxcERmNFBIUk9KVnNTejg3YzRkVnZCS0hodDNwM0RXMW5JaXdFUS9va2tTbFFJdVlWYy9PQmlwTTZSS2xCNXV2CnNQV2FMUkp4QjJiVDB1aUVLcjUyL00zUzczN01oMFFKbXcxT0Qrc1VpNWhXOC8wL3FudDVRdzBFVHdEK3VnYW0KbFVhempwRWs2YjRwZy8wblJDS0JKZlVhN3JtQ3lQR0NVdlVRNnk2bUVJYU9ZRkFiM2haeXdVb2psaXhydVQ5OApsbC9OWjhHaFpmRjlWclQ2d0oxYVQrVEhoaHhkTnI5UlZnWS9XYXU3ZDJ3ditnd1hFRUY1OGxNbk5CS0k0RUFQCklGSmxyc3l1OGpNNUNzamdPQU9PY0F4YUptTm1NSngwTWJwZDRud2hQbVZqL20rczZUcnZpZG43K1RPbW9DN00KTTVvbWs4RUNnWUVBeXE5WHBHaE52M3JsS3RHc1BuN3V2WDV4MVM0OTIyZGRUei9XY3FYUE4xejhsbG5WT0tqWQp2TE1HemNrTUZlRktOQnhVR0pFVTFXb3Q2ZDkwWC85M2g1dHpNd25weFE2blYyS0hPTkc4Nks5TXF6L29ibXFwClJaZlJJb09XM3hEQlpyY0YyUDlXWkY3aDZXaDVXQmM1c2xpdnBxRU5PUkhVNUQrMEMybnRkaFVDZ1lFQTBlVHMKSWNsRzZSOVA3WDB5NGxhcGN4MmEwMlJTZjVZcWtvaVN5M0MzbFFkRzNBNmxRajN0Z0hTOW42dnI5emdvSjdiVApKb0hVMnp2d01iZWdYWUh2c1Q3RkxHSWFOUW9xaHRDTDk2bFlGMzZ5MTVGb1VSUXJyR05FbUFZWkV3R1laUFJlCno2bGRMeWdpVE9XelZxb08zc1k1SUJWUzVoT1A3RzZlTytQb3A2Y0NnWUFjc3pkMTBFOHlEZlRsVzB0SWpqREEKSkdkNkNGSTUveWozVDlMTjZTeXVhanhhRGQ1alo0VkpNeENEa3pSaTVNUGRIU1hMVkwvZWVHcUg4MXhITzZWeApUbEhCcUdXeHdhRndma01uaUl0M1oxc3o1SmpGQ2RWdVJWRVgwZ3BMQzlSVzl4T2M1b3NWSzFwUjhyazhBQTNyCmN5TnNOT0hxY3R2eWRoTElpdmRWQVFLQmdCakYweFRkdzYvS0VVM3ZZKzBRMjJrSnluYyt0UG40Q0VoSk5FSXMKcUk0L1VKNnlYOURrckQ1b0NPVnFqaXdjaGFqQ1RFT1VPVUl5M2RPUVg2NEpvdmVoZC9ZWUVnM0dpR1JuQXM0VgpQNTl1UmI5cG13MU91eVRhaG9NRzNUakFESE9GNEJiVVgzb3NXM2dGK0ZlM05KQVloeStCTk1xUTdvQ3lRWnpCCjluaXJBb0dBVFc0MkRrMFFJZFBKUlJMUnRmd2luaGp2UTAvRTFWTHFxcm9XTjdyY2FnUWZJK0pxU1VTWXpPNG8KUWZaaEdxU0RUbWpPR3hsVko3aHR1Q25oWmlwazYrN2liU2M1RnBVNHdZZ3JVTUJGSS96SkJlZ1NQY3FnSUQ1RwpYOU5DYlZyYlhoWDQ4dUd2QWFDZllqbm1NZFB0UGhBc25KbzY1UUVRak9PMUhwdU0vMkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-network
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSEcvMXVReTZRQ1hnV0NwejFDbWdiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXdNekl5V2hjTk1qWXdOVEF4TVRJdwpNekl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ21MbVdyckZZTFAyczQvVnhsR2NrY3RDKzZORDNTSlQzbkZyVEdnWktxQTFCVDBEd0kKMFJieDhRQXpFOHlmMldoNS9xamFVVldQUjR5NFgzT0d4WTdCd2tzdXJnSElISlRBSmc4MVR3ZFgyMUgyWmMvVQpwVnk3QkVnZkVKUDhySit3bDAxR2dUNXVTK0t4ZVpEOW1rd2I1V0hDUWlVdFRyVDBmY3N4K0RjQnIrRTVNQWJTCnNKU0hRZW9EZDlqbkVvcFlIblNwUENyZXFWS0NxY2NqdHFqS0N5SGhKQVMydjFJcjBJSGQ2ZFBvUlk2ZytYaHAKeWxhWm55enFSL0I2Z1JCcFpKeGt1NVBSV2dLZDNRWUhrc0ZuYWRNenJQSjArODZJVHI4WlZQT1BSQktlOEVBVwo5eERGbkVPNDJiYmhiTG4rRDUyaU5OSlV5TTdvb1Vxajk3cXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhT2lxdSthc0ppZEcxb0ZqWEJ6WTdTczJoMVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFa0FLZVFDMVZRQ0NrTENXaU5vWm93M3JQUkE1eXRnMDVDZGMwUnBhK1pTUHo1ZjRMWkJxUHFtCjhOWWN4NGQzaWx4Tk5qakdGdjdlT0J3YkdxMWtaeTNEcTJBWURtQmYvdWkyOWRNTUlzbHdxSUF3TFZYdEovcTYKdVY3RFlWT0JJa3dtWGxwT01VZ1VVaUN6YnptZEtkcnZEcEFwYkRjUGlvL2RiYXdMK0hRSmZRWDYrZ3RKNHc5bApDVWxJMlN2dkhzSEJkQS90NlVSaGFvbWtnOWtEV2F1TEd6UVlWMEdFM01kMmZZbi9BbUdlc25COTlLcVlKNk16CkZxOFNiMU1kUGtycHN6YlU0eHhSbXdiUncrWGs5RGVDM0VSdXpXTFpGWmRPaHBVMUZ5SjQ3MDk0TzZIQnZoSUUKYWFlZkFLSHNKZ3NXR2swYkEwSDNhV2NZbmROT2xEST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGk1bHE2eFdDejlyT1AxY1pSbkpITFF2dWpROTBpVTk1eGEweG9HU3FnTlFVOUE4CkNORVc4ZkVBTXhQTW45bG9lZjZvMmxGVmowZU11Rjl6aHNXT3djSkxMcTRCeUJ5VXdDWVBOVThIVjl0UjltWFAKMUtWY3V3UklIeENUL0t5ZnNKZE5Sb0UrYmt2aXNYbVEvWnBNRytWaHdrSWxMVTYwOUgzTE1mZzNBYS9oT1RBRwowckNVaDBIcUEzZlk1eEtLV0I1MHFUd3EzcWxTZ3FuSEk3YW95Z3NoNFNRRXRyOVNLOUNCM2VuVDZFV09vUGw0CmFjcFdtWjhzNmtmd2VvRVFhV1NjWkx1VDBWb0NuZDBHQjVMQloyblRNNnp5ZFB2T2lFNi9HVlR6ajBRU252QkEKRnZjUXhaeER1Tm0yNFd5NS9nK2RvalRTVk1qTzZLRktvL2U2c3dJREFRQUJBb0lCQUhrVmhXODQrdGpuTkxFcApxcERmNFBIUk9KVnNTejg3YzRkVnZCS0hodDNwM0RXMW5JaXdFUS9va2tTbFFJdVlWYy9PQmlwTTZSS2xCNXV2CnNQV2FMUkp4QjJiVDB1aUVLcjUyL00zUzczN01oMFFKbXcxT0Qrc1VpNWhXOC8wL3FudDVRdzBFVHdEK3VnYW0KbFVhempwRWs2YjRwZy8wblJDS0JKZlVhN3JtQ3lQR0NVdlVRNnk2bUVJYU9ZRkFiM2haeXdVb2psaXhydVQ5OApsbC9OWjhHaFpmRjlWclQ2d0oxYVQrVEhoaHhkTnI5UlZnWS9XYXU3ZDJ3ditnd1hFRUY1OGxNbk5CS0k0RUFQCklGSmxyc3l1OGpNNUNzamdPQU9PY0F4YUptTm1NSngwTWJwZDRud2hQbVZqL20rczZUcnZpZG43K1RPbW9DN00KTTVvbWs4RUNnWUVBeXE5WHBHaE52M3JsS3RHc1BuN3V2WDV4MVM0OTIyZGRUei9XY3FYUE4xejhsbG5WT0tqWQp2TE1HemNrTUZlRktOQnhVR0pFVTFXb3Q2ZDkwWC85M2g1dHpNd25weFE2blYyS0hPTkc4Nks5TXF6L29ibXFwClJaZlJJb09XM3hEQlpyY0YyUDlXWkY3aDZXaDVXQmM1c2xpdnBxRU5PUkhVNUQrMEMybnRkaFVDZ1lFQTBlVHMKSWNsRzZSOVA3WDB5NGxhcGN4MmEwMlJTZjVZcWtvaVN5M0MzbFFkRzNBNmxRajN0Z0hTOW42dnI5emdvSjdiVApKb0hVMnp2d01iZWdYWUh2c1Q3RkxHSWFOUW9xaHRDTDk2bFlGMzZ5MTVGb1VSUXJyR05FbUFZWkV3R1laUFJlCno2bGRMeWdpVE9XelZxb08zc1k1SUJWUzVoT1A3RzZlTytQb3A2Y0NnWUFjc3pkMTBFOHlEZlRsVzB0SWpqREEKSkdkNkNGSTUveWozVDlMTjZTeXVhanhhRGQ1alo0VkpNeENEa3pSaTVNUGRIU1hMVkwvZWVHcUg4MXhITzZWeApUbEhCcUdXeHdhRndma01uaUl0M1oxc3o1SmpGQ2RWdVJWRVgwZ3BMQzlSVzl4T2M1b3NWSzFwUjhyazhBQTNyCmN5TnNOT0hxY3R2eWRoTElpdmRWQVFLQmdCakYweFRkdzYvS0VVM3ZZKzBRMjJrSnluYyt0UG40Q0VoSk5FSXMKcUk0L1VKNnlYOURrckQ1b0NPVnFqaXdjaGFqQ1RFT1VPVUl5M2RPUVg2NEpvdmVoZC9ZWUVnM0dpR1JuQXM0VgpQNTl1UmI5cG13MU91eVRhaG9NRzNUakFESE9GNEJiVVgzb3NXM2dGK0ZlM05KQVloeStCTk1xUTdvQ3lRWnpCCjluaXJBb0dBVFc0MkRrMFFJZFBKUlJMUnRmd2luaGp2UTAvRTFWTHFxcm9XTjdyY2FnUWZJK0pxU1VTWXpPNG8KUWZaaEdxU0RUbWpPR3hsVko3aHR1Q25oWmlwazYrN2liU2M1RnBVNHdZZ3JVTUJGSS96SkJlZ1NQY3FnSUQ1RwpYOU5DYlZyYlhoWDQ4dUd2QWFDZllqbm1NZFB0UGhBc25KbzY1UUVRak9PMUhwdU0vMkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-network
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSEcvMXVReTZRQ1hnV0NwejFDbWdiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXdNekl5V2hjTk1qWXdOVEF4TVRJdwpNekl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ21MbVdyckZZTFAyczQvVnhsR2NrY3RDKzZORDNTSlQzbkZyVEdnWktxQTFCVDBEd0kKMFJieDhRQXpFOHlmMldoNS9xamFVVldQUjR5NFgzT0d4WTdCd2tzdXJnSElISlRBSmc4MVR3ZFgyMUgyWmMvVQpwVnk3QkVnZkVKUDhySit3bDAxR2dUNXVTK0t4ZVpEOW1rd2I1V0hDUWlVdFRyVDBmY3N4K0RjQnIrRTVNQWJTCnNKU0hRZW9EZDlqbkVvcFlIblNwUENyZXFWS0NxY2NqdHFqS0N5SGhKQVMydjFJcjBJSGQ2ZFBvUlk2ZytYaHAKeWxhWm55enFSL0I2Z1JCcFpKeGt1NVBSV2dLZDNRWUhrc0ZuYWRNenJQSjArODZJVHI4WlZQT1BSQktlOEVBVwo5eERGbkVPNDJiYmhiTG4rRDUyaU5OSlV5TTdvb1Vxajk3cXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhT2lxdSthc0ppZEcxb0ZqWEJ6WTdTczJoMVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFa0FLZVFDMVZRQ0NrTENXaU5vWm93M3JQUkE1eXRnMDVDZGMwUnBhK1pTUHo1ZjRMWkJxUHFtCjhOWWN4NGQzaWx4Tk5qakdGdjdlT0J3YkdxMWtaeTNEcTJBWURtQmYvdWkyOWRNTUlzbHdxSUF3TFZYdEovcTYKdVY3RFlWT0JJa3dtWGxwT01VZ1VVaUN6YnptZEtkcnZEcEFwYkRjUGlvL2RiYXdMK0hRSmZRWDYrZ3RKNHc5bApDVWxJMlN2dkhzSEJkQS90NlVSaGFvbWtnOWtEV2F1TEd6UVlWMEdFM01kMmZZbi9BbUdlc25COTlLcVlKNk16CkZxOFNiMU1kUGtycHN6YlU0eHhSbXdiUncrWGs5RGVDM0VSdXpXTFpGWmRPaHBVMUZ5SjQ3MDk0TzZIQnZoSUUKYWFlZkFLSHNKZ3NXR2swYkEwSDNhV2NZbmROT2xEST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtzSmptQjVIU2pwdzRaY3pqalVHazR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd01qRXlNRE15TTFvWERUSTJNRFV3TVRFeQpNRE15TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTVYclBHNkd2dTY2bDQxUitLcTVZVUh5TnFScFoKNkhTL2JTQzVpM1lkRmY0eFdOOTJEdFdId2V2bTFMbUZXRU0zaTJmanN6MEtRUm5kUlJUWWE5Ymc2d3BnOTlkUApjMEFaT04wSnRNeFlPRGUvOVR2NTFkTEFveE1mQkYxeWZVSDg4amphTjBlalZQenFvU01zV005Y0VsK3J5dTRkCkgrUmthQmpsamhpN2dybExac054SmVtc01xSmdJMWFkZmcya3FqSTRQcy9ONk9qeDBvdFFpUnVuUUtydTBibVcKM003ckJEZC9qblBueEcrQlRUTVNPT1V3VEJkaFJPOTM0MndNOEtzTDdUZ0lFOExDRVFHS2ZjSDZaVCtST0pmdgplZnBaVUNoZ2ovK3VKeiswNGdaVVZwWmxkZkg1cDNzb3dvSktCVHJwU3pMK3lNZjNnVm1aUjV1aDR3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUm82S3E3NXF3bUowYldnV05jSE5qdApLemFIVmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSlFsZzV3UnlKUWpVOVFqdzlrYmxERkhkbTk2d0dXUDRXVWtkWm8wakJrRTMxYTAKQXgxeVFQM3M1YkRab0tVUW1wa1dVaUdvS2ZGbHFOaHNDK1ZPZy8yUFpObGpIWktVMkdkMm9BVXBGbUVVUHZjNwoyMDRYei8wckIzeFMrVm1Pb0VRMVY1cGtPdjIyQmc0dGVscG5VUU4rK2Y3MlhwYmV4WTdXdWw4Z1d0SE9CdGhGCmo1OVRzODUwUDErc29YMFJCK0hVUkdlclRoazI4MHRvZDlJeG9MYnFWUUdMeTlEYjRCQklyOG5vKzF2ZDNJZTAKZ0tSZDMwR1ZxNGJMYndUTU1GSHA0YjJ5NTBod2VOYkx4eDlrTTIvNmh1dWxpcHlWMzE5NVJEdy9LOUt0WFpaNAptQVYwam9XdENGZUpDb1VxQWEvNXB4Nnc2QjZXRTYybHhzWjVSV3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNVhyUEc2R3Z1NjZsNDFSK0txNVlVSHlOcVJwWjZIUy9iU0M1aTNZZEZmNHhXTjkyCkR0V0h3ZXZtMUxtRldFTTNpMmZqc3owS1FSbmRSUlRZYTliZzZ3cGc5OWRQYzBBWk9OMEp0TXhZT0RlLzlUdjUKMWRMQW94TWZCRjF5ZlVIODhqamFOMGVqVlB6cW9TTXNXTTljRWwrcnl1NGRIK1JrYUJqbGpoaTdncmxMWnNOeApKZW1zTXFKZ0kxYWRmZzJrcWpJNFBzL042T2p4MG90UWlSdW5RS3J1MGJtVzNNN3JCRGQvam5QbnhHK0JUVE1TCk9PVXdUQmRoUk85MzQyd004S3NMN1RnSUU4TENFUUdLZmNINlpUK1JPSmZ2ZWZwWlVDaGdqLyt1SnorMDRnWlUKVnBabGRmSDVwM3Nvd29KS0JUcnBTekwreU1mM2dWbVpSNXVoNHdJREFRQUJBb0lCQUNKdFVqVHJCTm83VVZmUgpqVHdKKytYWFNjbGMwckExRTZMampmS0dQY2JXNDhCWmhmU2p4RUlyaWUzUUIxaytmRTdGdnp0Y3BQVXZWQ3JRCi9jYnY3YjVWU0VibVhsMEQrTVMzSklXalFuanNwRGUrVDdUc2NVb0Z6Rmx6UzRIUExJdUtTL0tQSk1uVFI3LzAKN3VwRDhhUXdCaTNqbXlyMXNMcU5RYU1Yd3NuUmllQ0xObkdneFRjVEJhVEdZZjhMUWRPL2dKTWxaSjkrVXlmUwpDMGRsK1VHSUJndklDa2NyNGVWUDJXZkZaUXJOd2pWelRSaVRTYXc3cnkzQXB2WHhnOS9PVzVaYm90MUtnSjEyCkZqNHU5M1liejFWeWpRRzE3WjVBcndiSWtmSUtDeFFLQ0t2QmFpSk9kR1FsNUJTL3RXWitGaGpuM0NpKy9vNlEKKzBTYnhZRUNnWUVBNmNPamZjalZBcGpoQ2V5MXVyTXp6aHVTQmxEZ050bzErSEEwaXFjazY5c01sOGFaQnpXMwpzK1FsZ2NVdmUrSmxiNExMVUlrSjRUYTBXcW5oMU9idTVqU0J4eTRmekp5R3NQSEViYTRPQzNsKzh0K2RDeXdyCkJOdy9vNW44Q3Q4c0Iyd0FMRnRTTUl1bnpndG5KRmhkTnV0ejhGak8yVlppa3VSMDVTTkZ4TnNDZ1lFQSswN1cKM1NobXd6bTVGeHFjaXlwUzFsL3VuSUtCblMzZUJlNHVTRDJWT3hqdVZvY2RmTGZOY3hXY0lKVUQ3bnRHV0lkbAowTXEzb1pVa3A4ckNIQXQ1V3NhRW42YUpHVWZQbU84bnhRR1BJQ2ZkbzRXM0lXN2FZeUlYZDlISDFqODVkRy9aCnFtODhJMUkzUDc4NHJBYmxSMjVCaXBNTEVnOHAxbWhwOTdHV1laa0NnWUVBeXIxQlkwczE2dDI2ZHdnVUNNdDUKQjYyRHRQU1pzUmtKcStGc3dELzhWbzRSV3VVRVBXdUtXbnRwU0NaRGEzZExzQzNJdFoxVXN6M2xwNmdrMDZoQgowK2dBRWtaZmorN0ZKbHRZbUNOWHpQM2ZhemNqRmRpRnF0NTJWeWFxb0tjem9YQTZxajI5aDVybnUxektaSXc2CnMvSDdDSjJOTUpPcVJHbmROQW1tYmZjQ2dZQmhRY0t2dGxvR3hja1c0dXFnaFJHbisxcHA0YXZ0dTNtSVRBUkgKV3VYdENCbjlESzlodS9SYnpJb3VwZHp1cDNDekJEdG9FWHY5b2EyYzdrQXZBRlhIeHJvKzJ3R0Y4aCtxYlN1ego5NFYvaVU0aVliWmN6dnpmanFzTWFQaHd0dWt5WWJNWVhaSWxqVVRxZThPZjk4ODExTHF5dVhONFdydnpTVmR4ClQ1NEdTUUtCZ0Yzd0lyTTQvalQ0WWc1ZzZmUE9mNk5kZFhsc1djRjZDeURtWE5maXZPTGxQSnA2aU45MGc5ckIKZGdoUmkyamdvN3B6cEZGL0xoK2pWSnlEVzFwaGlyWTFENjNJcUlsMFBsS2NIV09tV1JpallBK05pc01JMndzcwpMMjhOakwvMjlWTzNIdGJuNVJsMjFrb2xJZERiOTE1TGI0T2YrOWNkcE94OVN2RUdGbWVECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-network
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSEcvMXVReTZRQ1hnV0NwejFDbWdiekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXdNekl5V2hjTk1qWXdOVEF4TVRJdwpNekl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ21MbVdyckZZTFAyczQvVnhsR2NrY3RDKzZORDNTSlQzbkZyVEdnWktxQTFCVDBEd0kKMFJieDhRQXpFOHlmMldoNS9xamFVVldQUjR5NFgzT0d4WTdCd2tzdXJnSElISlRBSmc4MVR3ZFgyMUgyWmMvVQpwVnk3QkVnZkVKUDhySit3bDAxR2dUNXVTK0t4ZVpEOW1rd2I1V0hDUWlVdFRyVDBmY3N4K0RjQnIrRTVNQWJTCnNKU0hRZW9EZDlqbkVvcFlIblNwUENyZXFWS0NxY2NqdHFqS0N5SGhKQVMydjFJcjBJSGQ2ZFBvUlk2ZytYaHAKeWxhWm55enFSL0I2Z1JCcFpKeGt1NVBSV2dLZDNRWUhrc0ZuYWRNenJQSjArODZJVHI4WlZQT1BSQktlOEVBVwo5eERGbkVPNDJiYmhiTG4rRDUyaU5OSlV5TTdvb1Vxajk3cXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVhT2lxdSthc0ppZEcxb0ZqWEJ6WTdTczJoMVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFa0FLZVFDMVZRQ0NrTENXaU5vWm93M3JQUkE1eXRnMDVDZGMwUnBhK1pTUHo1ZjRMWkJxUHFtCjhOWWN4NGQzaWx4Tk5qakdGdjdlT0J3YkdxMWtaeTNEcTJBWURtQmYvdWkyOWRNTUlzbHdxSUF3TFZYdEovcTYKdVY3RFlWT0JJa3dtWGxwT01VZ1VVaUN6YnptZEtkcnZEcEFwYkRjUGlvL2RiYXdMK0hRSmZRWDYrZ3RKNHc5bApDVWxJMlN2dkhzSEJkQS90NlVSaGFvbWtnOWtEV2F1TEd6UVlWMEdFM01kMmZZbi9BbUdlc25COTlLcVlKNk16CkZxOFNiMU1kUGtycHN6YlU0eHhSbXdiUncrWGs5RGVDM0VSdXpXTFpGWmRPaHBVMUZ5SjQ3MDk0TzZIQnZoSUUKYWFlZkFLSHNKZ3NXR2swYkEwSDNhV2NZbmROT2xEST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTakNDQWpLZ0F3SUJBZ0lRS1gzeGFvT28yenE5alVDSi9yWFVIekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBeU1USXdNekl6V2hjTk1qWXdOVEF4TVRJdwpNekl6V2pBa01TSXdJQVlEVlFRRERCa3FMbUV1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTEwcmQrUm1ueHAwREhIak40UVBGNlV4STZWdlkKcDY0S3owaVVnQ2pmclp4ZEJKT0plYWdvTWNvd2VQZjdFUi9PUnE1UTVpWmJTS1VNSFVJNlY4UElDMXNuOHV5QgpBSUJta1JxdkNSV0MzRURsNzgyanozT01rK3MrYjYzd0UybkFQQ1I2UHNadUhtLzBiTmQ5M1NqdEZXMW1IWHpRCkp1alZwZExmZTcvQ3JOaHRwNURiTCtEYXN2NnMxd3VHaHRpZitaNE1vUWtHWTROWmN4cUlXbXlqOWFnZmEzd1YKbFp0R2JHeDFuMmlXMEhEMWdPRTI0TWhIU3BwNTZvdzJUYVRFUzRpNHNYbjRkdmFBMy8zWU0venFYMXVqa3dhMQprWDZGZk1SK1ltQlUyaVYzdVF5MkxmRnYybUpjczJ5c0FPM01yZDVraFNZRVNQbDdScHJCZG9IT3Z3SURBUUFCCm80R0hNSUdFTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUm82S3E3NXF3bUowYldnV05jSE5qdApLemFIVmpBa0JnTlZIUkVFSFRBYmdoa3FMbUV1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHClNJYjNEUUVCQ3dVQUE0SUJBUUJrbG1saTcwUTBTbWJ1SHR3dVBadXp4Tk9iRWJndE9adU01SHJyek5DOVIwODgKcW1XbGFEUUorS0JmVGtselZodWVhNTh1Tk1oSXNiOG1JeHBUTit0M2V5T1QvM2dKNHhJVjZvM2daWm55RVRSRAptR0NZTHFFdUpHeEdNUWRnbHBSTVc1SEdyWTh1VTNFNUthTmtSZWUvalM2MjdJbmNSWGJESVZsc2VOUHUxaEVtCk0wb2o5Q2hvbS9yQXgxTWprZ3lMNm14bDIwZWdLSWcwNEpvMEllSTlCNkYwVm1tdkpaR1lNbEJ4RERDRnZTVUMKK3NsYXlRbmt0aGJURG5XL3Y1dEJMZDBnMHFUK1BWSzR1UldNYmRERkpaaXBIMTFYckIvTnFOWUlDdHpkSG9zcQpoWTVQdFM1ZFJNY3ZXTVYwb2IweXZXdU9vTWpnbU9ZMitqZ3ZkNlVTCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMTByZCtSbW54cDBESEhqTjRRUEY2VXhJNlZ2WXA2NEt6MGlVZ0NqZnJaeGRCSk9KCmVhZ29NY293ZVBmN0VSL09ScTVRNWlaYlNLVU1IVUk2VjhQSUMxc244dXlCQUlCbWtScXZDUldDM0VEbDc4MmoKejNPTWsrcytiNjN3RTJuQVBDUjZQc1p1SG0vMGJOZDkzU2p0RlcxbUhYelFKdWpWcGRMZmU3L0NyTmh0cDVEYgpMK0Rhc3Y2czF3dUdodGlmK1o0TW9Ra0dZNE5aY3hxSVdteWo5YWdmYTN3VmxadEdiR3gxbjJpVzBIRDFnT0UyCjRNaEhTcHA1Nm93MlRhVEVTNGk0c1huNGR2YUEzLzNZTS96cVgxdWprd2Exa1g2RmZNUitZbUJVMmlWM3VReTIKTGZGdjJtSmNzMnlzQU8zTXJkNWtoU1lFU1BsN1JwckJkb0hPdndJREFRQUJBb0lCQVFEQkhKMkkwQk5uR3ZWcwpkNHVzTnpjeDhjUkExYXE3bFdpS3o3NnNTbjJBZTQ0UUNjcTVmalUzbS9Yb3UvN1BPR2xOaXhSenJKb2F5ampZCmtjeEZadzZyNlFNbmFpNjRaWFFhMmdXQkwzTm0zeXVnOHlMcGRPcjJ6Mzc4cTlkNWdsVDFYWDd0aWczQ2JZZWcKalphUFp5TnFJZXdEclM0RWlMc0M5K2lRVnN4blBrRG1JeHpoKzNLaHZCaVVDUjhkUGxOVlhTR2p1WWNBQU8ydQptWGN5VzlSSXZ5enAxaTVoTEFPNkJPczBUWnJMTGQ0Qml3Z1RTdlFxMWw1SlVMaWdUbzBkL3hLV1pFaElpd1prCnBaNWovWWVFWnR3b1lOT043L3lpR0VMRUVhbGlZdlhSSHlFZ3VoQzd0MUtMUm1veUJxejlSMDRqeHNHbi9wa0gKS1lGSk1HeVJBb0dCQU52d0Y4a0NIRXBCVjYyL3MwUkQ5RDVIUk9naGZIazQva3E3WjZkZ2REb0Nicmw4cTZLYQp4dTJmVXp1SFZ6VWtiMy9hK21GYnZJczJISUZFdGlKVlZUc1VoeU1MRzY5M0ZkZUVuWXhwbWxMeDB1QjlZNllFCkNWeFZBcnFPOE85MDhPTXREK05ibWFqWHFMTmcvUGV4cnJZNE5HNUhMMm1GN0pjYTI0T0R4NGZaQW9HQkFQcVgKeUZuYjl2L2NyK1JkYVVvOS9iR2huNkZVcVdZd0Z3VThHVU1rOEloNzJ3OThFVjJ4RmtpOWhkVGxIZkRFMk9YTgpGMEhnTUR3c3Nhck5SUGREUFZBK0I1ME9NbitmaWNjMS9EOWRENjUrN2lMZmNOMzB5R3N3QkwwanlOK05sejR2CmRkU3FGTmg4MUtrTnc4MmVOOGU4dGtqSGVoZlRYZXdEMkhhZFpVUlhBb0dBWnVFb1B4NTluVDV6aFJMbkNFZkIKT0dDZUd2ZVBBaVZtemc1YnJpK3dMbkowMk04NGVoZHNkanJROUVlYXc0RUhwd2NIbUFNUmJ3MGd5RmNiMjNPUApLdE92WXZVUFBrUzJNdG9WMkZpTmw3OEdwWHdCNE9hQ2VtNUptSHJFdVQ0NmNBbmtKTFgwYXNaMlkzSTY0cUo2CjEwSHpSS0tIeXhTYVZ4UjVHa3ZLU2dFQ2dZRUFrOHNKQXRaVWFyckJrakgxY3kvMGU5c1N4cGVrQVB6RDF2YUcKLzY2OW5nRk9SV2VxNWxNWERYZVpndUpPTWo0bW5nSERnYnF6T0FvMERzUlp0R3NYc2tlalBlR3RyczlzOXV6RQpCS3JpSU13RHJ0V1JQNWFxeld6WW5xU0lTREM5enBNM0wySFFRWTM5N21hTDRLMDd3TFZ2M0tTcFFYd0xuTEwzCjY1MFFxS2tDZ1lBZ29nMWxNV2YzbmJvZGs5ekIzdlRhbWtEU1pSSG44ZzZHUWRQMU04ZkgwRUdQZndCbnovUTMKOWNDUElOOGYxay9XMmhOS3Exd2Z5L21YOU92N1FHNWgvd0YxR1lqc0dTcGlid2NZa1pHcVMwN0RCU3Uwc3N5LwpsMXY5a0xxSDVpMHc2TVF0NnBMdmlHMEw0NlYySWpnU3RveUVGbzV5ZFhxdFQ0ZFM5K0x5NEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-network
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "never"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: a
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "true"

  kube-proxy-replacement: "probe"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  endpoint-status: "health"
  enable-endpoint-routes: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    icmp
    http
  enable-hubble-open-metrics: "true"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "10.4.0.1/14"
  cluster-pool-ipv4-mask-size: "23"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-k8s-endpoint-slice: "true"
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-cilium-endpoint-slice: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-network
data:
  config.yaml: |
    cluster-name: a
    peer-service: "hubble-peer.kube-network.svc.cluster.local:443"
    listen-address: :4245
    metrics-listen-address: ":9966"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-network
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/hubble/dashboards-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-l7-http-metrics-by-workload
  namespace: grafana
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    grafana_dashboard: "1"
data:
  hubble-l7-http-metrics-by-workload.json: "{\n  \"__inputs\": [],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\",\n      \"version\": \"9.0.5\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"stat\",\n      \"name\": \"Stat\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"grafana\",\n          \"uid\": \"-- Grafana --\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations \u0026 Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 1,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 14,\n      \"panels\": [],\n      \"title\": \"General\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"reqps\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 1\n      },\n      \"id\": 16,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"9.0.5\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"round(sum(rate(hubble_http_requests_total{reporter=~\\\"${reporter}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\"}[$__rate_interval])), 0.001)\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Volume\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 1\n      },\n      \"id\": 17,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"pluginVersion\": \"9.0.5\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", status!~\\\"5.*\\\"}[$__rate_interval]))\\n/\\nsum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval]))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ source_namespace }}/{{ source_workload }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Success Rate (non-5xx responses)\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 5,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 1\n      },\n      \"id\": 18,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"pluginVersion\": \"9.0.5\",\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"histogram_quantile(0.50, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval])) by (le))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"P50\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"histogram_quantile(0.95, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval])) by (le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"P95\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"histogram_quantile(0.99, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\"}[$__rate_interval])) by (le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"P99\",\n          \"range\": true,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"Request Duration\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 6,\n      \"panels\": [],\n      \"title\": \"Requests by Source\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"reqps\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"id\": 3,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"max\",\n            \"mean\",\n            \"sum\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"round(sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, status), 0.001)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ source_namespace }}/{{ source_workload }}: {{ status }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Requests by Source and Response Code\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 7\n      },\n      \"id\": 7,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"min\",\n            \"max\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\",status!~\\\"5.*\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload)\\n/\\nsum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ source_namespace }}/{{ source_workload }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Success Rate (non-5xx responses) By Source\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 17\n      },\n      \"id\": 4,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"min\",\n            \"max\",\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.50, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, le))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ source_namespace }}/{{ source_workload }} P50\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.95, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ source_namespace }}/{{ source_workload }} P95\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.99, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, source_namespace, source_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ source_namespace }}/{{ source_workload }} P99\",\n          \"range\": true,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"HTTP Request Duration by Source\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"collapsed\": false,\n      \"gridPos\": {\n        \"h\": 1,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 27\n      },\n      \"id\": 9,\n      \"panels\": [],\n      \"title\": \"Requests by Destination\",\n      \"type\": \"row\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"reqps\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 28\n      },\n      \"id\": 10,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"max\",\n            \"mean\",\n            \"sum\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"round(sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, status), 0.001)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ destination_namespace }}/{{ destination_workload }}: {{ status }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Requests by Destination and Response Code\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 28\n      },\n      \"id\": 11,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"min\",\n            \"max\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\",status!~\\\"5.*\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload)\\n/\\nsum(rate(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ method }} {{ destination_namespace }}/{{ destination_workload }}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Incoming Request Success Rate (non-5xx responses) By Destination\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\"\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 10,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 38\n      },\n      \"id\": 12,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"min\",\n            \"max\",\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\"\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.50, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, le))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ destination_namespace }}/{{ destination_workload }} P50\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.95, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ destination_namespace }}/{{ destination_workload }} P95\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"histogram_quantile(0.99, sum(rate(hubble_http_request_duration_seconds_bucket{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", reporter=\\\"${reporter}\\\", source_namespace=~\\\"${source_namespace}\\\", source_workload=~\\\"${source_workload}\\\"}[$__rate_interval])) by (cluster, destination_namespace, destination_workload, le))\",\n          \"hide\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"{{ cluster }} {{ destination_namespace }}/{{ destination_workload }} P99\",\n          \"range\": true,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"HTTP Request Duration by Destination\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"30s\",\n  \"schemaVersion\": 36,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Prometheus\",\n        \"multi\": false,\n        \"name\": \"DS_PROMETHEUS\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"queryValue\": \"\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"type\": \"datasource\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total, cluster)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Cluster\",\n        \"multi\": false,\n        \"name\": \"cluster\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total, cluster)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 2,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\"}, destination_namespace)\",\n        \"description\": \"\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Destination Namespace\",\n        \"multi\": false,\n        \"name\": \"destination_namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\"}, destination_namespace)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 2,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\"}, destination_workload)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Destination Workload\",\n        \"multi\": false,\n        \"name\": \"destination_workload\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\"}, destination_workload)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 2,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total, reporter)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Reporter\",\n        \"multi\": false,\n        \"name\": \"reporter\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total, reporter)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\"}, source_namespace)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Source Namespace\",\n        \"multi\": true,\n        \"name\": \"source_namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\"}, source_namespace)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", source_namespace=~\\\"${source_namespace}\\\"}, source_workload)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Source Workload\",\n        \"multi\": true,\n        \"name\": \"source_workload\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(hubble_http_requests_total{cluster=~\\\"${cluster}\\\", destination_namespace=~\\\"${destination_namespace}\\\", destination_workload=~\\\"${destination_workload}\\\", source_namespace=~\\\"${source_namespace}\\\"}, source_workload)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-6h\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {},\n  \"timezone\": \"\",\n  \"title\": \"Hubble L7 HTTP Metrics by Workload\",\n  \"uid\": \"3g264CZVz\",\n  \"version\": 2,\n  \"weekStart\": \"\"\n}\n"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-network
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-network
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-network
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-network
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-network
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: metrics
    port: 9962
    protocol: TCP
    targetPort: prometheus
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/cilium-operator/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: cilium-operator
  namespace: kube-network
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: metrics
    port: 9963
    protocol: TCP
    targetPort: prometheus
  selector:
    io.cilium/app: operator
    name: cilium-operator
---
# Source: cilium/templates/hubble-relay/metrics-service.yaml
# We use a separate service from hubble-relay which can be exposed externally
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay-metrics
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-network
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-network
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-network
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-network
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      - name: cilium-monitor
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - --
        args:
        - |-
          for i in {1..5}; do \
            [ -S /var/run/cilium/monitor1_2.sock ] && break || sleep 10;\
            done; \
          cilium monitor
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: cilium-run
          mountPath: /var/run/cilium
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: wait-for-node-init
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until test -s "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"; do
            echo "Waiting on node-init to run...";
            sleep 1;
          done
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: cilium-bootstrap-file-dir
          mountPath: "/tmp/cilium-bootstrap.d"
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      dnsPolicy: Default
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: cilium-bootstrap-file-dir
        hostPath:
          path: "/tmp/cilium-bootstrap.d"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-nodeinit/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  namespace: kube-network
  labels:
    app: cilium-node-init
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: cilium-node-init
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-node-init
    spec:
      containers:
        - name: node-init
          image: "quay.io/cilium/startup-script:d69851597ea019af980891a4628fb36b7880ec26"
          imagePullPolicy: IfNotPresent
          lifecycle:
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script. This script is invoked
          # using nsenter, so it runs in the host's network and mount namespace using
          # the host's userland tools!
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash
              
              set -o errexit
              set -o pipefail
              set -o nounset
              
              echo "Link information:"
              ip link
              
              echo "Routing table:"
              ip route
              
              echo "Addressing:"
              ip -4 a
              ip -6 a
              mkdir -p "/tmp/cilium-bootstrap.d"
              date > "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"
              echo "Node initialization complete"
              
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - SYS_MODULE
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            privileged: true
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      hostPID: true
      hostNetwork: true
      priorityClassName: system-node-critical
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-network
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "435cde670acf820a75b6062d9c71db279215c5b5c913248d434f92646c758323"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      dnsPolicy: Default
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "1356fe4f89051bf8e0069538e7dfc3a5a3072d035b153e2c18e48b04505e5402"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-network
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "db58895f8bfc7a9858091698dbb61e43d5fd0160963d17c1eeedf3fd326a993d"
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
---
# Source: cilium/templates/cilium-agent/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cilium-agent
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
    relabelings:
    - replacement: ${1}
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
  targetLabels:
  - k8s-app
---
# Source: cilium/templates/cilium-operator/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cilium-operator
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
  annotations:
spec:
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
  targetLabels:
  - io.cilium/app
---
# Source: cilium/templates/hubble-relay/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble-relay
  namespace: kube-network
  labels:
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble-relay
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: metrics
    interval: "10s"
    path: /metrics
---
# Source: cilium/templates/hubble/servicemonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hubble
  namespace: kube-network
  labels:
    app.kubernetes.io/part-of: cilium
  annotations:
spec:
  selector:
    matchLabels:
      k8s-app: hubble
  namespaceSelector:
    matchNames:
    - kube-network
  endpoints:
  - port: hubble-metrics
    interval: "10s"
    honorLabels: true
    path: /metrics
    relabelings:
    - replacement: ${1}
      sourceLabels:
      - __meta_kubernetes_pod_node_name
      targetLabel: node
